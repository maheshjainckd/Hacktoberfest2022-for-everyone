#include<bits/stdc++.h>
using namespace std;

class node
{
    public:
    int data;
    node *left;
    node *right;
};
node* createNode(int x)
{

    node *new_node=new node();
    new_node->data=x;
    new_node->left=NULL;
    new_node->right=NULL;
    return new_node;
}
void reverseInorder(node *root,int *sum)
{
    if(!root)
        return ;
    reverseInorder(root->right,sum);
    *sum=*sum+root->data;
    root->data=*sum-root->data;
    reverseInorder(root->left,sum);
}
void transformTree(node *root)
{
    int sum=0;
    reverseInorder(root,&sum);
}
void inorder(node *root)
{

    if(root==NULL)
        return;

    inorder(root->left);
cout<<root->data<<" ";
    inorder(root->right);
}
int main()
{
    node *root = createNode(11);
    root->left = createNode(2);
    root->right = createNode(29);
    root->left->left = createNode(1);
    root->left->right = createNode(7);
    root->right->left = createNode(15);
    root->right->right = createNode(40);
    root->right->right->left = createNode(35);
   inorder(root);
   transformTree(root);
   cout<<"\n";
   inorder(root);

    return 0;
}
