Leetcode - 118. Pascal's Triangle
https://leetcode.com/problems/pascals-triangle/



class Solution {
    public List<List<Integer>> generate(int n) {
        List<List<Integer>> ar=new LinkedList<>();
        if(n==1){
            List<Integer> a1 = new LinkedList<Integer>();
            a1.add(1);
            ar.add(a1);
            return ar;
        }
        int i;
        long a=1;
        long b=11;
        List<Integer>[] a1= new LinkedList[n];
        a1[0]=new LinkedList<Integer>();
        a1[0].add(1);
        ar.add(a1[0]);
        for(i=1;i<n;i++){
            a1[i]=new LinkedList<Integer>();
            a1[i].add(a1[i-1].get(0)+0);
            for(int j=1;j<a1[i-1].size();j++){
                a1[i].add(a1[i-1].get(j)+a1[i-1].get(j-1));
            }
            a1[i].add(a1[i-1].get(a1[i-1].size()-1)+0);
            ar.add(a1[i]);
            a=b;
            b*=11;
        }
        return ar;
    }
}