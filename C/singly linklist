//link list without reccursion 
#include<stdio.h>
#include<stdlib.h>
//to create a link list we have to create a note (combination of data and address)

// creating a node
struct node{
    int data;
    struct node *address;
};

struct node *start= NULL,*temp,*next,*New,*prev;

// creating name of functions
void create();
void insert();
void Delete();
void display();

int main()
 {
    int ch;
    do{
        printf("\n------------------------------link list------------------------------\n");
        printf("enter 1 to create a link list \n");
        printf("enter 2 to insert an element in link list \n");
        printf("enter 3 to delete an element in link list \n");
        printf("enter 4 to display link list \n");
        printf("enter 5 to exit \n");
        printf("enter your choice------------->");
        scanf("%d",&ch);
        switch(ch){
            case 1:
            create();break;
            case 2:
            insert();break;
            case 3:
            Delete();break;
            case 4:
            display();break;
            case 5:
            break;
            default:
            printf("you have choosen invalid choice......TRY AGAIN\n");      
        }
    }while(ch!=5);
    return 0; 
}
void create()
{
    int n ;
    char ch;
    printf("enter a value");
    scanf("%d",&n);
    start=(struct node*) malloc(sizeof(struct node));
    start->data=n;
    start->address=NULL;
    temp=start;
    printf("enter y to address next node ");
    scanf(" %c",&ch);
    while(ch=='y'||ch=='Y'){
        printf("enter a value");
        scanf("%d",&n);
        New=(struct node*) malloc(sizeof(struct node));
        New->data=n;
        New->address=NULL;
        temp->address=New;
        temp=New;
        printf("enter y to address next node ");
        scanf(" %c",&ch);
    }
}
void insert(){
    if(start==NULL){
        printf("-----------------please create a list first ---------\n\n");
    }
    else{
        int pos,element;
        printf("enter element---->");
        scanf("%d",&element);

        New=(struct node*) malloc(sizeof(struct node));
        New->data=element;

        printf("enter position of element --->");
        scanf("%d",&pos);

        if(pos==1){
            New->address=start;
            start=New;
        }
        else{
            temp=start;
            int count=0;
            while(temp!=NULL){
                count++ ;
                temp=temp->address;
            }
            if(pos>(count+1)){
                printf("invalid postion please enter a position between range 1 to %d\n",count+1);
            }
            else if(pos==count+1){
                temp=start;
                while(temp->address!=NULL){
                    temp=temp->address;
                }
                temp->address=New;
                New->address=NULL;
            }
            else{
                int i=1;
                temp=start;
                while(i<pos){
                    prev=temp;
                    temp=temp->address;
                    i++;
                }
                prev->address=New;
                New->address=temp;
                
            }
        }
    }    
}
void Delete(){
    int pos;
    if(start==NULL){
        printf("element cant be deleted ,please create a list first");
    }
    else{
        printf("enter the position of node to be deleted --->");
        scanf("%d",&pos);
        if(pos==1){
            temp=start;
            start=start->address;
            printf("deleted data is %d",temp->data);
            free(temp);
        }
        else{
            int count=0;
            temp =start;
            while(temp!=NULL){
                count++;
                temp=temp->address;
            }
            if(pos==count){
                next=start;
                while(next->address!=NULL){
                    prev=next;
                    next=next->address;
                }
                printf("deleted data is %d",next->data);
                prev->address=NULL;
                free(next);
            }
            else if(pos<count){
                next=start;
                for(int i=0;i<pos-1;i++){
                    prev=next;
                    next=next->address;
                }
                printf("deleted data is %d",next->data);
                prev->address=next->address;
                free(next);
            }
            else{
                printf("position invalid please select a value between 1 and %d\n",count);
            }
        }
    }
}
void display(){
    if(start==NULL){
        printf("you have not created a link list\n");
    }
    else{
        printf("elements in node are");
        temp =start;
        while(temp!= NULL){
            printf("%d||",temp->data);
            temp=temp->address;
        }
    }
}
